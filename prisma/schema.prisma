generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["omitApi"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Post {
  id        String   @id @default(cuid())
  text      String
  isPublic  Boolean  @default(false) @map("is_public")
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String   @map("author_id")
  likes     User[]   @relation("likes")
  parent    Post?    @relation("post_genealogy", fields: [parentId], references: [id])
  parentId  String?  @map("parent_id")
  children  Post[]   @relation("post_genealogy")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("posts")
}

model User {
  id             String    @id @default(cuid())
  username       String    @unique
  hashedPassword String    @map("hashed_password")
  isAdmin        Boolean   @default(false) @map("is_admin")
  isGuest        Boolean   @default(true) @map("is_guest")
  firstName      String    @map("first_name")
  lastName       String    @map("last_name")
  city           String?
  state          String?
  country        String?
  imageUrl       String?   @map("image_url")
  posts          Post[]
  likes          Post[]    @relation("likes")
  followedBy     User[]    @relation("user_follows")
  following      User[]    @relation("user_follows")
  createdAt      DateTime  @default(now()) @map("created_at")
  updatedAt      DateTime  @updatedAt @map("updated_at")
  sessions       Session[]

  @@map("users")
}

model Session {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @map("user_id")
  userAgent String   @map("user_agent")
  valid     Boolean  @default(true)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("sessions")
}
